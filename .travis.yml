language: r
warnings_are_errors: false
cache: false
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libcurl4-openssl-dev
    - libxml2-dev
    - libfftw3-dev
    - libgsl0-dev
    - mesa-common-dev
    - libglu1-mesa-dev
    - devscripts
os: linux
services: xvfb
r: release
env:
  global:
  - R_BUILD_ARGS="--no-manual"
  - R_CHECK_ARGS="--as-cran --install-args=--build"
  - RGL_USE_NULL=TRUE
  - WARNINGS_ARE_ERRORS=1
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
  - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true
  - _R_CHECK_FORCE_SUGGESTS_=false
  - secure: 6DU0WPX+fphejMUHMq46yUw/1SCv8jwh9hH2fhcQ8DE+iyb2Oew2dWHMmu4RcRs94cDSRhBmEZoEvM81N0GRjomWmy7qHTtkRagsqb4sgJKOLRDKPxFVVDTYP0IrGweUxswgjHJNdjPKb99VhcWoNG8SwsQYgto+isECzHgPQIj8ms2JlJRzvmgjD004XrP+s3MlV7N5KfbCwo8mvV2OqAxcyUmkVcNYNaYGciSBHRnL9fRMhhoLBO/Cy9UYuZ2DQAI3XH1HjWFQ/1yLZpdM/Zjoohaan6hXiNrhKAgwg72/lwezgHZdv8G+JP/Kq1IKIM0iLwhzpGPk/R9R9RBfvVv9jIn8Z6AmrcJ5fas9jZgjW9S1r6/jAUjTVCpWl5jvbHpD3d3n+yQA2RIRTBO4+1qT7DGeWcAAMHCRTM+HeJTq8MIQIJm9P+4Yr7ypWbFPE+mFOBCBCtmP/0mVSJ4KJwmKKh6/ZEQ5huefg3yX8wi5GDHC2dMkETxYfh3dMmiNiugCA9C9hQKvK9IStiX6La8zTpfztPBTKxHOi1rovJtXnnAtvwrhamR4YTvGjf3DpNsWDKXZEKIUOzEnbCxeAD72wOGM/d4ChlhyQMApWBd8reZe2+S3IV3sUmaH7Xjqr5F6gxYG6oU0JOFBIj+rmTnf0MFZNzbdpmGucgprgWA=
before_install:
- if [ "$TRAVIS_DIST" = "trusty" ]; then sudo apt-get -y install libgsl0ldbl ; fi
- ulimit -n 2048
- export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
- export PROJ_DIR=`basename $PWD`
- echo "travis_wait*\.log$" >> .Rbuildignore
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- start_xvfb ;
- jags_install || true;
- if `need_v8`; then v8_install || true; fi
- dcmtk_install || true;
- gsl_install 2.1 || true ;
- export rver=`r_version`; echo $rver ;
- export PACKAGE_NAME=`package_name`
- export RCHECK_DIR=${PACKAGE_NAME}.Rcheck
- remove_neuroc_packages
- export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
- x=`export_clang_cxx`; eval ${x}
- echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
- echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
- clang_cxx
- export cmake_version="3.11"
- cmake --version
- x=`cmake_setup`; echo "${x}"; eval ${x};
- cmake --version
- export ants_user=neuroconductor
- if [[ "${PACKAGE_NAME}" == "ITKR" || "${PACKAGE_NAME}" == "ANTsRCore" || "${PACKAGE_NAME}"
  == "ANTsR" ]]; then Rscript -e "install.packages(c('Rcpp', 'RcppEigen'), type =
  'source', repo = 'http://cran.rstudio.com')" ; fi
- if [[ "${PACKAGE_NAME}" == "ITKR" || "${PACKAGE_NAME}" == "ANTsRCore" ]]; then export
  R_BUILD_ARGS="${R_BUILD_ARGS} --no-build-vignettes " ; export R_CHECK_ARGS="--no-vignettes
  ${R_CHECK_ARGS}" ; fi
- if [[ "${PACKAGE_NAME}" != "ITKR" ]]; then echo "Installing Missing Deps ITKR" ;
  install_missing_remote_deps_all ${ants_user}/ITKR ; gh_binary_install ${ants_user}/ITKR
  ; fi
- if [[ "${PACKAGE_NAME}" != "ANTsRCore" && "${PACKAGE_NAME}" != "ITKR" ]]; then echo
  "Installing Missing Deps ANTsRCore" ; install_missing_remote_deps_all ${ants_user}/ANTsRCore;
  gh_binary_install_passive ${ants_user}/ANTsRCore ; fi
- if [[ "${PACKAGE_NAME}" != "ANTsRCore" && "${PACKAGE_NAME}" != "ITKR" && "${PACKAGE_NAME}"
  != "ANTsR" ]]; then echo "Installing Missing Deps ANTsR" ; install_missing_remote_deps_all
  ${ants_user}/ANTsR ; gh_binary_install_passive ${ants_user}/ANTsR ; fi
- if [[ "${PACKAGE_NAME}" == "ANTsR" ]]; then export _R_CHECK_FORCE_SUGGESTS_=false
  ; fi
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- echo $PATH ;
- install_deps_no_suggests
- install_python_requirements ;
- R CMD javareconf ;
- travis_run_cache
script:
- Rscript -e 'install.packages("remotes")'
- Rscript -e 'remotes::install_github("hadley/pkgdown")'
- travis_wait 100 Rscript -e 'pkgdown::build_site()'
deploy:
  provider: pages
  skip_cleanup: true
  keep_history: true
  local_dir: docs
  on:
    branch: master
  token: "$GITHUB_TOKEN"
