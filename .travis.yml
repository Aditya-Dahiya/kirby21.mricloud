language: r
sudo: false
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
- osx
osx_image: xcode9
r:
- 3.2
- 3.3
- 3.4
- release
- devel
matrix:
  allow_failures:
  - r: devel
env:
  global:
  - RGL_USE_NULL=TRUE
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
r_check_args: "--as-cran --install-args=--build"
before_install:
- ulimit -n 2048
- export PROJ_DIR=`basename $PWD`
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- start_xvfb ;
- export rver=`r_version`;
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
- jags_install
- remove_neuroc_packages
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- export PACKAGE_NAME=`package_name`
- echo "Package Name is $PACKAGE_NAME"
- if [[ "${PACKAGE_NAME}" == "waveslim" ]]; then fftw_install ; fi
- if [[ "${PACKAGE_NAME}" == "dti" ]]; then gsl_install ; fi
- if [[ "${PACKAGE_NAME}" == "ROpenCVLite" || "${PACKAGE_NAME}" == "Rvision" ]]; then
  shopt -s expand_aliases ; x=`Rscript -e "cat(Sys.which('R'))"` ; echo "reset R"
  ; alias R="travis_wait 100 ${x}" ; fi
- install_python_requirements ;
after_success:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
after_failure:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then PKG_TARBALL=$(ls -1t *.tar.gz | head -n
  1); PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'`
  ; mv ${PKG_TARBALL} ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}"
  ; fi
- if [[ "${TRAVIS_OS_NAME}" = "osx" ]]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: uICWz2vOTEaKuc9ZcMTLxfcIS2lzEyxW+ePs4oiQpq2qHl2x7htYqDFV/FkhNiJoRl7RmFm623RK02Owq0EKVDLSw9+gO8ro+m29QEELZDLyZaiRgRJj/bYluFxD6itP2GpdK1dGO+AT87Zdnk4pV/fcaLQTqHRSDB8eUT0Orp7PBNr0uSxly/scssCQ/4Ts5V7Vf5mNyRVZV9EADb36/Zl6DJU4ZJGvPZ7y8IweG5mnhsF5ex1qNZ+BwNKZL0WYrbOKKQrY3uRihjvk0gCLRzOUcZd9WWdV16E/hv+33sSWtgg0IoNTOYgvOZc0I+CJO0DfyTIDLRxkrmj8urCs6BeUTSQAEYPwa2lwl+d4YHFLuPRywWUT820mOdkTvWhshVSrKLv+5h5gGpu2Ko2ZMODDqKVhLorOIGXxbut0hckXFoV/TtCAFNvkpgIu4RUl7MaWunqEvZMMRErn830/vPURyeFZVrt0bZznpNL80u51nooHtyPKAKrVz6fwxiSQI5GOD5mk56fUo79ZQoh7nR7C1Fi1sQNLja8UphzHaazAiLF0iT1QiVbz7Qv8ZhC4HKAN5aFeQm5UqxlRq0P98qpx/UEMFo740MZ+gKVlm5Sy1Lv41Qk7OY//I3XZ2PuCScgbRWwz+jOZuSvz0X3C/utDA66VLTcp+ry5txwagKc=
after_deploy:
- if [[ "${TRAVIS_OS_NAME}" == "linux" && ${TRAVIS_R_VERSION_STRING} = "release" ]];
  then echo 'covr::coveralls(type = "all", quiet = FALSE)' > neuroc_covr.R ; travis_wait
  100 Rscript neuroc_covr.R ; rm neuroc_covr.R ; fi
